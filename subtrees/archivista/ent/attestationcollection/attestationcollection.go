// Code generated by ent, DO NOT EDIT.

package attestationcollection

const (
	// Label holds the string label denoting the attestationcollection type in the database.
	Label = "attestation_collection"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeAttestations holds the string denoting the attestations edge name in mutations.
	EdgeAttestations = "attestations"
	// EdgeStatement holds the string denoting the statement edge name in mutations.
	EdgeStatement = "statement"
	// Table holds the table name of the attestationcollection in the database.
	Table = "attestation_collections"
	// AttestationsTable is the table that holds the attestations relation/edge.
	AttestationsTable = "attestations"
	// AttestationsInverseTable is the table name for the Attestation entity.
	// It exists in this package in order to avoid circular dependency with the "attestation" package.
	AttestationsInverseTable = "attestations"
	// AttestationsColumn is the table column denoting the attestations relation/edge.
	AttestationsColumn = "attestation_collection_attestations"
	// StatementTable is the table that holds the statement relation/edge.
	StatementTable = "attestation_collections"
	// StatementInverseTable is the table name for the Statement entity.
	// It exists in this package in order to avoid circular dependency with the "statement" package.
	StatementInverseTable = "statements"
	// StatementColumn is the table column denoting the statement relation/edge.
	StatementColumn = "statement_attestation_collections"
)

// Columns holds all SQL columns for attestationcollection fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "attestation_collections"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"statement_attestation_collections",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)
