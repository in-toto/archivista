// Copyright 2021 The Witness Contributors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

import (
	"bytes"
	"flag"
	"fmt"
	"os"

	"github.com/in-toto/witness/cmd"
	"github.com/spf13/cobra/doc"
)

var directory string

func init() {
	flag.StringVar(&directory, "dir", "docs", "Directory to store the generated docs")
	flag.Parse()
}

func main() {
	mdContent := "# Witness CLI Reference\n\nThis is the reference for the Witness command line tool, generated by [Cobra](https://cobra.dev/).\n\n"
	// Generate markdown content for all commands
	for _, command := range cmd.New().Commands() {
		// We are not generating docs for the completion command right now, as it doesn't render in Markdown correctly
		if command.Use == "completion [bash|zsh|fish|powershell]" {
			continue
		}

		buf := new(bytes.Buffer)
		err := doc.GenMarkdown(command, buf)
		if err != nil {
			fmt.Println("Error generating markdown for command:", command.Use)
			continue
		}
		mdContent += buf.String()
	}

	// Write the combined markdown content to a file
	err := os.WriteFile(fmt.Sprintf("%s/commands.md", directory), []byte(mdContent), 0644)
	if err != nil {
		fmt.Println("Error writing to file:", err)
		os.Exit(1)
	}
}
