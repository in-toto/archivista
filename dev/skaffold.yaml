apiVersion: skaffold/v3alpha1
kind: Config
metadata:
  name: judge-k8s
build:
  local:
    useBuildkit: false
  artifacts:
  - image: registry.gitlab.com/testifysec/judge-platform/archivista
    context: "../archivista"
    ko:
      dir: "../archivista"
      main: "../archivista/cmd/archivista"
      env:
      - CGO_ENABLED=0
      flags:
      - -trimpath
      ldflags:
      - -extldflags "-static"

  - image: registry.gitlab.com/testifysec/judge-platform/judge-api
    context: "../judge-api"
    ko:
      dir: "../judge-api"
      main: "../judge-api/cmd/server"
      env:
      - CGO_ENABLED=0
      flags:
      - -trimpath
      ldflags:
      - -extldflags "-static"

  - image: registry.gitlab.com/testifysec/judge-platform/spire-internal/spire-server
    ko:
      dir: "../spire-internal"
      main: "../spire-internal/cmd/spire-server"
      env:
      - CGO_ENABLED=0
      flags:
      - -trimpath
      ldflags:
      - -extldflags "-static"
    context: "../spire-internal"

  - image: registry.gitlab.com/testifysec/judge-platform/spire-internal/spire-agent
    ko:
      dir: "../spire-internal"
      main: "../spire-internal/cmd/spire-agent"
      env:
      - CGO_ENABLED=0
      flags:
      - -trimpath
      ldflags:
      - -extldflags "-static"
    context: "../spire-internal"

  #web with no hmr
  - image: registry.gitlab.com/testifysec/judge-platform/web
    context: "../web"
    hooks:
      before:
        - command:
            - ./scripts/build-web.sh
    sync:
      manual:
        - src: "../web/public/**"
          dest: "/usr/share/nginx/html/"
    docker:
      dockerfile: "Dockerfile"
      buildArgs:
        base_image: "nginx:1.19.2-alpine"

manifests:
  rawYaml:
    - k8s/namespaces.yaml
    - k8s/cert-manager/*.yaml    
    - k8s/archivista/*.yaml
    - k8s/kratos/*.yaml
    - k8s/kratos-selfservice-ui-node/*.yaml
    - k8s/grafana-loki/*.yaml
    - k8s/mailhog/*.yaml
    - k8s/coredns/*.yaml
    - k8s/spire/*.yaml
    - k8s/spire-agent/*.yaml
    - k8s/web/*.yaml
    - k8s/judge-api/*.yaml

    #dev tools    
    - k8s/dev/phpmyadmin/*.yaml

deploy:
  kubectl: {}
  helm:
    hooks:
      before:
        - host:
            command: [ "./scripts/create-hostmount.sh" ]
        - host:
            command: [ "./scripts/create-kratos-secret.sh" ]
        - host:
            command: [ "./scripts/create-kratos-cm.sh" ]
      after:
        - host:
            command: ["./scripts/create-tls-secret.sh"]

    releases:
      - name: mysql
        namespace: mysql
        createNamespace: true
        skipBuildDependencies: true
        repo: https://charts.bitnami.com/bitnami
        remoteChart: mysql
        version: 9.4.2
        setValues:
          initdbScripts: |
            01-init.sql: |
              CREATE DATABASE IF NOT EXISTS archivista;
              CREATE DATABASE IF NOT EXISTS spire;
              CREATE DATABASE IF NOT EXISTS kratos;
              CREATE DATABASE IF NOT EXISTS judgeapi;
          auth:
            rootPassword: root
            username: root
          primary:
            podSecurityContext:
              enabled: false
            containerSecurityContext:
              enabled: true
              runAsUser: 0
              runAsNonRoot: false
            persistence:
              enabled: true
              existingClaim: mysql-pv-claim
          metrics:
            enabled: false
          service:
            type: ClusterIP

      - name: cert-manager
        namespace: cert-manager
        skipBuildDependencies: true
        createNamespace: true
        repo: https://charts.jetstack.io
        remoteChart: cert-manager
        version: v1.10.0
        setValues:
          installCRDs: true

      - name: grafana
        namespace: observability
        skipBuildDependencies: true
        createNamespace: true
        repo: https://prometheus-community.github.io/helm-charts
        remoteChart: kube-prometheus-stack
        version:
        setValues:
          installCRDs: true
          grafana:
            additionalDataSources:
              - name: Loki
                type: loki
                url: http://loki.observability.svc.cluster.local:3100

      - name: loki
        namespace: observability
        skipBuildDependencies: true
        createNamespace: true
        repo: https://grafana.github.io/helm-charts
        remoteChart: loki-stack
        version:
        setValues:
          installCRDs: true
          grafana:
            sidecar:
              datasources:
                enabled: false
      - name: mailhog
        namespace: mailhog
        skipBuildDependencies: true
        createNamespace: true
        repo: https://codecentric.github.io/helm-charts
        remoteChart: mailhog
        version: 5.2.3

      - name: minio
        skipBuildDependencies: true
        createNamespace: true
        namespace: minio
        repo: https://charts.min.io/
        remoteChart: minio
        version: 5.0.1
        setValues:
          resources:
            requests:
              memory: 1Gi
          persistence:
            enabled: true
            existingClaim: minio-pvc
            size: 10Gi
          mode: standalone
          rootUser: minio-user
          rootPassword: minio-password
