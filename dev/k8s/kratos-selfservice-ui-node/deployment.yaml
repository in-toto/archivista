apiVersion: apps/v1
kind: Deployment
metadata:
  name: kratos-selfservice-ui-node
  namespace: kratos-selfservice-ui-node
  labels:
  annotations:
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kratos-selfservice-ui-node
      app.kubernetes.io/instance: kratos-selfservice-ui-node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kratos-selfservice-ui-node
        app.kubernetes.io/instance: kratos-selfservice-ui-node
        app.kubernetes.io/version: v0.11.1
      annotations:
    spec:
      imagePullSecrets:
      automountServiceAccountToken:
      volumes:
      containers:
        - name: kratos-selfservice-ui-node
          image: oryd/kratos-selfservice-ui-node:v0.11.1
          imagePullPolicy: IfNotPresent
          env:
            - name: KRATOS_PUBLIC_URL
              value: http://kratos-public.kratos.svc.cluster.local
            - name: KRATOS_BROWSER_URL
              value: https://kratos.testifysec.localhost
      #      - name: PROJECT_NAME
      #        value: {{ .Values.projectName | quote }}
            - name: BASE_URL
              value: https://login.testifysec.localhost
      #      - name: JWKS_URL
      #        value: {{ .Values.jwksUrl | quote }}
            - name: KRATOS_ADMIN_URL
              value: http://kratos-admin.kratos.svc.cluster.local
      #      - name: SECURITY_MODE
      #        value: {{ .Values.securityMode | quote }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/alive
              port: http
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
          resources:
          securityContext:
      nodeSelector:
      affinity:
      tolerations:
      topologySpreadConstraints:
