apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: spire-server
  name: spire-server
  namespace: spire
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: spire-server
  serviceName: spire-server
  template:
    metadata:
      labels:
        app: spire-server
      namespace: spire
    spec:
      initContainers:
      - name: init-myservice
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -vz -w 1 mysql.mysql.svc.cluster.local 3306; do echo "Waiting for mysql service"; sleep 1; done;']
      containers:
        - args:
            - run
            - -config
            - /run/spire/config/server.conf
          image: registry.gitlab.com/testifysec/judge-platform/spire-internal/spire-server
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 3
          name: spire-server
          ports:
            - containerPort: 8081
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /run/spire/config
              name: spire-config
            - mountPath: /run/spire/data
              name: spire-data
      serviceAccount: spire-server
      serviceAccountName: spire-server
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: spire-server
          name: spire-config
        - emptyDir: {}
          name: spire-data
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate