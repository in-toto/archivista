// Code generated by entc, DO NOT EDIT.

package ent

import "context"

func (a *Attestation) AttestationCollection(ctx context.Context) (*AttestationCollection, error) {
	result, err := a.Edges.AttestationCollectionOrErr()
	if IsNotLoaded(err) {
		result, err = a.QueryAttestationCollection().Only(ctx)
	}
	return result, err
}

func (ac *AttestationCollection) Attestations(ctx context.Context) ([]*Attestation, error) {
	result, err := ac.Edges.AttestationsOrErr()
	if IsNotLoaded(err) {
		result, err = ac.QueryAttestations().All(ctx)
	}
	return result, err
}

func (ac *AttestationCollection) Statement(ctx context.Context) (*Statement, error) {
	result, err := ac.Edges.StatementOrErr()
	if IsNotLoaded(err) {
		result, err = ac.QueryStatement().Only(ctx)
	}
	return result, err
}

func (d *Dsse) Statement(ctx context.Context) (*Statement, error) {
	result, err := d.Edges.StatementOrErr()
	if IsNotLoaded(err) {
		result, err = d.QueryStatement().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (d *Dsse) Signatures(ctx context.Context) ([]*Signature, error) {
	result, err := d.Edges.SignaturesOrErr()
	if IsNotLoaded(err) {
		result, err = d.QuerySignatures().All(ctx)
	}
	return result, err
}

func (d *Dsse) PayloadDigests(ctx context.Context) ([]*PayloadDigest, error) {
	result, err := d.Edges.PayloadDigestsOrErr()
	if IsNotLoaded(err) {
		result, err = d.QueryPayloadDigests().All(ctx)
	}
	return result, err
}

func (pd *PayloadDigest) Dsse(ctx context.Context) (*Dsse, error) {
	result, err := pd.Edges.DsseOrErr()
	if IsNotLoaded(err) {
		result, err = pd.QueryDsse().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (s *Signature) Dsse(ctx context.Context) (*Dsse, error) {
	result, err := s.Edges.DsseOrErr()
	if IsNotLoaded(err) {
		result, err = s.QueryDsse().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (s *Statement) Subjects(ctx context.Context) ([]*Subject, error) {
	result, err := s.Edges.SubjectsOrErr()
	if IsNotLoaded(err) {
		result, err = s.QuerySubjects().All(ctx)
	}
	return result, err
}

func (s *Statement) AttestationCollections(ctx context.Context) (*AttestationCollection, error) {
	result, err := s.Edges.AttestationCollectionsOrErr()
	if IsNotLoaded(err) {
		result, err = s.QueryAttestationCollections().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (s *Statement) Dsse(ctx context.Context) ([]*Dsse, error) {
	result, err := s.Edges.DsseOrErr()
	if IsNotLoaded(err) {
		result, err = s.QueryDsse().All(ctx)
	}
	return result, err
}

func (s *Subject) SubjectDigests(ctx context.Context) ([]*SubjectDigest, error) {
	result, err := s.Edges.SubjectDigestsOrErr()
	if IsNotLoaded(err) {
		result, err = s.QuerySubjectDigests().All(ctx)
	}
	return result, err
}

func (s *Subject) Statement(ctx context.Context) (*Statement, error) {
	result, err := s.Edges.StatementOrErr()
	if IsNotLoaded(err) {
		result, err = s.QueryStatement().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (sd *SubjectDigest) Subject(ctx context.Context) (*Subject, error) {
	result, err := sd.Edges.SubjectOrErr()
	if IsNotLoaded(err) {
		result, err = sd.QuerySubject().Only(ctx)
	}
	return result, MaskNotFound(err)
}
