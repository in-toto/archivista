permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

name: release
on: [push, pull_request]
jobs:
  test:
    strategy:
      matrix:
        go-version: [ 1.19.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Format Unix
        run: test -z $(go fmt ./...)
      - name: Install GoKart
        run: go install github.com/praetorian-inc/gokart@latest

      - name: Static Analysis
        uses: testifysec/witness-run-action@v0.1.2
        with:
          enable-sigstore: true
          enable-archivista: true
          step: static-analysis
          attestations: "git github sarif"
          command: gokart scan . -o sarif-results.json -s

      - name: Test
        uses: testifysec/witness-run-action@v0.1.2
        with: 
          step: "test"
          attestations: "github git"
          command: go test -v -coverprofile=profile.cov -covermode=atomic ./...

      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          GO111MODULE=off go get github.com/mattn/goveralls
          $(go env GOPATH)/bin/goveralls -coverprofile=profile.cov -service=github

  release:
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.2
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          install-only: true

      - name: Run GoReleaser
        uses: testifysec/witness-run-action@v0.1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        with:
          enable-sigstore: true
          enable-archivista: true
          attestations: "github git"
          trace: false
          step: build
          command: goreleaser release --rm-dist


  #TODO make new docker containers so we just copy the binaries into the containers
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.AUTH_TOKEN }}

      - name: Package archivista
        uses: testifysec/witness-run-action@v0.1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        with:
          enable-sigstore: true
          enable-archivista: true
          attestations: "github git"
          trace: false
          step: package
          command: >
            docker buildx build
            --build-arg BINARY_PATH=./dist/archivista_linux_amd64_v1/archivista
            --file ./Dockerfile
            --iidfile ./iidfile
            --platform linux/amd64
            --tag ghcr.io/${{ github.repository_owner }}/archivista:${{ github.ref_name }}
            --metadata-file ./metadata-file
            --attest type=provenance,mode=max
            --push .

      - name: Package archivistactl
        uses: testifysec/witness-run-action@v0.1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        with:
          enable-sigstore: true
          enable-archivista: true
          attestations: "github git"
          trace: false
          step: package
          command: >
            docker buildx build
            --build-arg BINARY_PATH=./dist/archivistactl_linux_amd64_v1/archivistactl
            --file ./Dockerfile
            --iidfile ./iidfile
            --platform linux/amd64
            --tag ghcr.io/${{ github.repository_owner }}/archivistactl:${{ github.ref_name }}
            --metadata-file ./metadata-file
            --attest type=provenance,mode=max
            --push .
