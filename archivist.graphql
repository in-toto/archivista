scalar Cursor

type Dsse {
    id: ID!
    gitbom_sha256: String!
    payload_type: String!
    statement: Statement!
    signatures: [Signature!]
    payload_digests: [PayloadDigest!]
}

type Statement {
   id: ID!
   predicate: String!
   subjects: [Subject!]
   attestation_collection: AttestationCollection!
}

type Signature {
    id: ID!
    key_id: String!
    signature: String!
}

type PayloadDigest {
    id: ID!
    algorithm: String!
    value: String!
}

type SubjectDigest {
    id: ID!
    algorithm: String!
    value: String!
}

type Subject {
    id: ID!
    name: String!
    subject_digest: [SubjectDigest!]
}

type AttestationCollection {
    id: ID!
    name: String!
    attestations: [Attestation]
}

type Attestation {
    id: ID!
    type: String!
}

type PageInfo {
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    startCursor: Cursor
    endCursor: Cursor
}

type DsseConnection {
    totalCount: Int!
    pageInfo: PageInfo!
    edges: [DsseEdge]
}

type DsseEdge {
    node: Dsse
    cursor: Cursor!
}

type Status {
    database: String!
    graphql: String!
    grpc: String!
}

type Query {
    """
    `status` returns the status of the GraphQL server and database.

    Including `database` will test database connectivity.
    """
    status: Status!

    """
    Retrieves all DSSE entries that match the query specified in `where`.

    This interface conforms to the Relay Pagination Spec (https://relay.dev/graphql/connections.htm)
    """
    dsses(
        after: Cursor,
        first: Int,
        before: Cursor,
        last: Int,
        where: DsseWhereInput
    ): DsseConnection!
}
